version: '3.7'

networks:
  app-tier:
    driver: bridge

services:

  redis:
    image: 'bitnami/redis:latest'
    command: redis-server --requirepass passwordRedis123
    environment:
      - REDIS_PASSWORD_FILE=passwordRedis123
      - REDIS_PASSWORD=passwordRedis123
    expose:
      - 6379
    ports:
      - "6379:6379"
    networks:
      app-tier:
        aliases:
          - redis.svc.cluster.local

  postgresdb:
    image: postgres
    container_name: postgresdb
    env_file:
      - ./envs/variables.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    networks:
      app-tier:
        aliases:
          - postgres.svc.cluster.local

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: api
    command: "gunicorn news_scraper.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    env_file:
      - ./envs/variables.env
    volumes:
      - static:/app/data
    networks:
      app-tier:
        aliases:
          - api.svc.cluster.local
    depends_on:
      - postgresdb

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    volumes:
      - static:/app/data
    depends_on:
      - api
    ports:
      - "8081:80"
    networks:
      app-tier:

  worker:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    container_name: "celery-worker"
    env_file:
      - ./envs/variables.env
    depends_on:
      - redis
    command: "celery -A news_scraper worker -l info"
    networks:
      app-tier:

  scheduler:
    build:
      context: .
      dockerfile: docker/scheduler/Dockerfile

    container_name: "celery-scheduler"
    command: [ "python3", '-m', "celery", "-A", "news_scraper", "beat", "-l", "info", "--scheduler",
               "django_celery_beat.schedulers:DatabaseScheduler" ]
    depends_on:
      - api
      - redis
      - postgresdb
    env_file:
      - ./envs/variables.env

    networks:
      app-tier:


volumes:
  pgdata:
  static:
  worker-volume:
